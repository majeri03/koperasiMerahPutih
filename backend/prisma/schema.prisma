// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =============================================
// MODEL UNTUK SKEMA PUBLIC (MANAJEMEN TENANT)
// =============================================
enum TenantStatus {
  PENDING
  ACTIVE
  SUSPENDED
}

model Tenant {
  id          String   @id @default(uuid())
  name        String
  subdomain   String   @unique
  schemaName  String   @unique @map("schema_name")
  status      TenantStatus @default(PENDING)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("tenants")
}

// =============================================
// MODEL UNTUK SKEMA TENANT (USERS, ROLES, ETC.)
// =============================================
model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
  @@map("roles")
}

model User {
  id            String   @id @default(uuid())
  fullName      String   @map("full_name")
  email         String   @unique
  passwordHash  String   @map("password_hash")
  hashedRefreshToken String?   @map("hashed_refresh_token")
  status        String   @default("active") // 'pending', 'active', 'rejected'
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int  @map("role_id")

  @@map("users")
}